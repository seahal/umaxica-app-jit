name: '[CI] Ruby on Rails'

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  static-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    defaults:
      run:
        shell: bash

    env:
      # RailsがRedisとPostgreSQLに接続するための環境変数
      REDIS_URL: redis://localhost:6379/0
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/myapp_test
      RAILS_ENV: test
      POSTGRESQL_AUTH_PUB='psql-pub'
      POSTGRESQL_AUTH_SUB='psql-sub'
      POSTGRESQL_CORE_PUB='psql-pub'
      POSTGRESQL_CORE_SUB='psql-sub'
      POSTGRESQL_DOCS_PUB='psql-pub'
      POSTGRESQL_DOCS_SUB='psql-sub'
      VALKEY_CACHE_URL='redis://vk-cache:6379'
      VALKEY_SESSION_URL='redis://vk-session:6379'

    # Service containers to run with `container-job`
    services:
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379  # Redisのデフォルトポートをマッピング

      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432  # PostgreSQLのデフォルトポートをマッピング

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Rubocop
        run: bin/rubocop --fail-fast

      - name: Brakeman
        run: bundle exec brakeman -z -q

      - name: bundle audit
        run: bundle exec bundle audit check --update

      - name: rails test
        run: bundle exec rails db:create && bundle exec rails db:migrate && bundle exec rails test

# CI/CD Pipeline for Umaxica App
name: 'CI'
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
  issues: write
  checks: write
  pull-requests: write
defaults:
  run:
    shell: bash
env:
  CI: true
  RAILS_ENV: test
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  NODE_ENV: test
  BUNDLE_WITH: test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_DB: test_db
jobs:
  setup-and-test:
    name: Setup and Test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['3.4.6']
        node-version: ['22']
    services:
      postgres:
        image: postgres:16
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 6379:6379
      zookeeper:
        image: confluentinc/cp-zookeeper:7.4.0
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
      kafka:
        image: confluentinc/cp-kafka:7.4.0
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        options: >-
          --health-cmd "kafka-broker-api-versions --bootstrap-server localhost:9092" --health-interval 30s --health-timeout 10s --health-retries 5
        ports:
          - 9092:9092
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install system dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y \
            libpq-dev \
            libvips-dev \
            libxml2-dev \
            libyaml-dev \
            build-essential
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.2.22'
      - name: Install JavaScript dependencies
        run: |
          bun install --frozen-lockfile
      - name: Build JavaScript assets
        run: |
          bun run build
      - name: Run JavaScript tests
        run: |
          bun test
      - name: Setup test databases
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/test_db
          REDIS_URL: redis://localhost:6379/0
        run: |
          # Run Rails database setup without seeding guarded data
          bin/rails db:prepare
      - name: Run Brakeman
        run: bundle exec brakeman -z -q
      - name: Run bundle-audit
        run: bundle exec bundle audit check --update
      - name: Run bun audit
        run: |
          bun audit
      - name: Run license_finder
        run: bundle exec license_finder
        continue-on-error: true
      - name: Run RuboCop
        run: bundle exec rubocop --fail-fast
      - name: Run ERB Lint
        run: bundle exec erb_lint --lint-all
      - name: Run Rails tests
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/test_db
          REDIS_URL: redis://localhost:6379/0
          ELASTICSEARCH_URL: http://localhost:9200
          KAFKA_BROKERS: localhost:9092
        run: |
          bin/rails test
      - name: Generate test coverage report
        if: always()
        run: |
          if [ -d "coverage" ]; then
            echo "Test coverage generated in coverage/"
            ls -la coverage/
          fi
      - name: Upload test coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.ruby-version }}
          path: coverage/
          retention-days: 30
      - name: Upload test logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ matrix.ruby-version }}
          path: |
            log/test.log
            tmp/screenshots/
          retention-days: 7

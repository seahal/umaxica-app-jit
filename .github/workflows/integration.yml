name: 'CI'
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
  issues: write
defaults:
  run:
    shell: bash

# 再利用可能なステップを定義
jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

  ubuntu:
    needs: [setup]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        check: [brakeman, rubocop, bundle-audit, erb-lint, about, notes]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Run Brakeman
        if: matrix.check == 'brakeman'
        run: bundle exec brakeman -z -q
      - name: Run Rubocop
        if: matrix.check == 'rubocop'
        run: bin/rubocop --fail-fast
      - name: Run Bundle Audit
        if: matrix.check == 'bundle-audit'
        run: bundle exec bundle audit check --update
      - name: Erb lint
        if: matrix.check == 'erb-lint'
        run: bundle exec erb_lint --lint-all
      - name: about
        if: matrix.check == 'about'
        run: bundle exec rails about
      - name: Erb lint
        if: matrix.check == 'notes'
        run: bundle exec rails notes

  docker:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        runner: ['bin/rails test', 'bun test', 'bin/rubocop', 'bin/brakeman -z -q']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # キャッシュの設定を修正
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # ビルド時にキャッシュを正しく指定
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: app:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Debug
        uses: mxschmitt/action-tmate@v3

      - name: Run tests in Docker
        run: docker compose run main ${{ matrix.runner }}

      # キャッシュを適切に移動（新しいキャッシュが存在する場合のみ）
      - name: Move cache
        run: |
          if [ -d /tmp/.buildx-cache-new ]; then
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          fi
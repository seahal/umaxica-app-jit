# TODO: use 'bundle exec rails routes --unused' 
name: 'CI'
on:
  push:
    branches:
      - main
      - develop
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
  issues: write
defaults:
  run:
    shell: bash
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    timeout-minutes: 5
    services:
      kafka:
        image: apache/kafka:latest
      opensearch:
        image: opensearchproject/opensearch
      valkey:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Remove lock files of packages
        run: rm -f Gemfile.lock
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Create .env file.
        run: |
          touch .env
          echo "POSTGRESQL_UNIVERSAL_PUB='localhost'" > .env
          echo "POSTGRESQL_UNIVERSAL_SUB='localhost'" >> .env
          echo "POSTGRESQL_CONTACT_PUB='localhost'" >> .env
          echo "POSTGRESQL_CONTACT_SUB='localhost'" >> .env
          echo "POSTGRESQL_IDENTIFIER_PUB='localhost'" >> .env
          echo "POSTGRESQL_IDENTIFIER_SUB='localhost'" >> .env
          echo "POSTGRESQL_PROFILE_PUB='localhost'" >> .env
          echo "POSTGRESQL_PROFILE_SUB='localhost'" >> .env
          echo "POSTGRESQL_TOKEN_PUB='localhost'" >> .env
          echo "POSTGRESQL_TOKEN_SUB='localhost'" >> .env
          echo "POSTGRESQL_ENTITY_PUB='localhost'" >> .env
          echo "POSTGRESQL_ENTITY_SUB='localhost'" >> .env
          echo "POSTGRESQL_MESSAGE_PUB='localhost'" >> .env
          echo "POSTGRESQL_MESSAGE_SUB='localhost'" >> .env
          echo "POSTGRESQL_NOTIFICATION_PUB='localhost'" >> .env
          echo "POSTGRESQL_NOTIFICATION_SUB='localhost'" >> .env
          echo "POSTGRESQL_CACHE_PUB='localhost'" >> .env
          echo "POSTGRESQL_CACHE_SUB='localhost'" >> .env
          echo "POSTGRESQL_CORE_PUB='localhost'" >> .env
          echo "POSTGRESQL_CORE_SUB='localhost'" >> .env
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      - name: Setup database
        run: |
          bin/rails db:create
          bin/rails db:migrate
          bin/rails db:seed
#  static-analysis:
#    name: Static Analysis
#    needs: [setup]
#    runs-on: ubuntu-latest
#    timeout-minutes: 5
#    strategy:
#      fail-fast: false
#      matrix:
#        check: [ brakeman, rubocop, bundle-audit, erb-lint, reek ]
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Remove lock files of packages
#        run: rm -f Gemfile.lock
#      - name: Setup Ruby
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: .ruby-version
#          bundler-cache: true
#      - name: Run ${{ matrix.check }}
#        run: |
#          case "${{ matrix.check }}" in
#            brakeman)
#              bundle exec brakeman -z -q
#              ;;
#            rubocop)
#              bin/rubocop --fail-fast
#              ;;
#            bundle-audit)
#              bundle exec bundle audit check --update
#              ;;
#            erb-lint)
#              bin/rails test:all
#              ;;
#          esac
#  rails-info:
#    name: Rails Project Info
#    needs: [setup]
#    runs-on: ubuntu-latest
#    timeout-minutes: 5
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Setup Ruby
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: .ruby-version
#          bundler-cache: true
#      - name: Rails information
#        run: |
#          bundle exec rails about
#          bundle exec rails notes
#          bundle exec rails stats
#  integration-tests:
#    name: Integration Tests
#    needs: [setup]
#    runs-on: ubuntu-latest
#    timeout-minutes: 15 # Reduced from 20 minutes to 15 minutes
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Remove Gemfile.lock
#        run: rm -f Gemfile.lock
#      - name: Setup Ruby
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: .ruby-version
#          bundler-cache: true
#      - name: Setup Docker environment
#        run: |
#          # Setup QEMU and Buildx
#          docker run --privileged --rm tonistiigi/binfmt --install all
#          docker buildx create --use
#      - name: Build Docker containers
#        run: |
#          docker compose build --build-arg GITHUB_ACTIONS=true \
#            --build-arg DOCKER_UID=$(id -u) \
#            --build-arg DOCKER_GID=$(id -g)
#      - name: Start Docker services
#        run: docker compose up -d
#      - name: Setup database
#        run: |
#          bin/rails db:create
#          bin/rails db:migrate
#          bin/rails db:seed
#      - name: Configure hosts
#        run: |
#          echo '127.0.0.1   com.api.localdomain net.api.localdomainc org.api.localdomain app.api.localdomain com.www.localdomain net.www.localdomain org.www.localdomain app.www.localdomain localhost' | sudo tee -a /etc/hosts
#      - name: Run all tests
#        run: bin/rails test:all
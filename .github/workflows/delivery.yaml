name: CD
on:
  push:
    branches:
      - main
#      - develop
  schedule:
    - cron: '0 1 * * 2' # Schedule to run every Tuesday at 10:00 PM JST.

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      GAR_LOCATION: asia-northeast1
      GAR_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GAR_REPOSITORY: umaxica-jit
      IMAGE_NAME: jit
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: false
      - name: bundle install
        run: bundle config set without 'test development' && bundle install
      - name: compile assets pipeline
        run: SECRET_KEY_BASE_DUMMY=1 RAILS_ENV=production bin/rails assets:precompile
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev
      - name: Build production Docker image
        run: |
          IMAGE_URI=$GAR_LOCATION-docker.pkg.dev/$GAR_PROJECT_ID/$GAR_REPOSITORY/$IMAGE_NAME
          docker build --target production \
            -t $IMAGE_URI:${{ github.sha }} \
            -t $IMAGE_URI:latest \
            --build-arg COMMIT_HASH=${{ github.sha }} .
#      - name: Run Trivy vulnerability scanner
#        uses: aquasecurity/trivy-action@0.28.0
#        with:
#         image-ref: '${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GAR_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
#         format: 'table'
#         exit-code: '1'
#         ignore-unfixed: true
#         vuln-type: 'os,library'
#         severity: 'CRITICAL,HIGH'
      - name: Push to Google Cloud Artifact Registry
        run: |
          IMAGE_URI=$GAR_LOCATION-docker.pkg.dev/$GAR_PROJECT_ID/$GAR_REPOSITORY/$IMAGE_NAME
          docker push $IMAGE_URI:latest
          docker push $IMAGE_URI:${{ github.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version: '23.x'
      - run: npm init -y
      - name: Build & Deploy Worker
        run: |
          cd ./public
          find . -type f -not -path "*/\.*" -not -name ".*" | while read -r file; do
            relative_path="${file:2}"
            CLOUDFLARE_ACCOUNT_ID=${{ secrets.CLOUDFLARE_ACCOUNT_ID }} CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }} npx wrangler@latest r2 object put "umaxica-production-cloudflare-r2-asset-jit-jp/$relative_path" --file="$file" --remote
          done
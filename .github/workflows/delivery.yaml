name: CD
on:
  push:
    branches:
      - main
      - develop # delete this line
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions: {}
jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    defaults:
      run:
        shell: bash
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 6380:6379
      postgres:
        image: postgres
        env:
          POSTGRES_USER: 'default'
          POSTGRES_PASSWORD: 'password'
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5433:5432
    env:
      POSTGRES_USER: 'default'
      POSTGRES_PASSWORD: 'password'
      POSTGRESQL_AUTH_PUB: 'localhost'
      POSTGRESQL_AUTH_SUB: 'localhost'
      POSTGRESQL_DOCS_PUB: 'localhost'
      POSTGRESQL_DOCS_SUB: 'localhost'
      POSTGRESQL_CORE_PUB: 'localhost'
      POSTGRESQL_CORE_SUB: 'localhost'
      REDIS_CACHE_URL: 'redis://localhost:6380/0'
      REDIS_SESSION_URL: 'redis://localhost:6380/1'
    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl default-mysql-client libjemalloc2 libvips
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Add hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1   com.api.localdomain net.api.localdomainc org.api.localdomain app.api.localdomain com.www.localdomain net.www.localdomain org.www.localdomain app.www.localdomain localhost" | sudo tee -a /etc/hosts
      - name: rubocop
        run: bin/rubocop
      - name: Rails db:create
        run: bin/rails db:create
      - name: Rails db:migrate
        run: bin/rails db:migrate
      - name: Do System Test
        run: bin/rails test:all
  push-to-amazon-ecr:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    needs: [ setup ]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # Set up AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Set up AWS environment
        run: aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 841162677945.dkr.ecr.ap-northeast-1.amazonaws.com
      - name: Build Docker image
        run: docker build --target production -t docker.io/my-organization/my-app:${{ github.sha }} --build-arg COMMIT_HASH=${{ github.sha }} .
      #      - name: Run Trivy vulnerability scanner
      #        uses: aquasecurity/trivy-action@0.28.0
      #        with:
      #          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
      #          format: 'table'
      #          exit-code: '1'
      #          ignore-unfixed: true
      #          vuln-type: 'os,library'
      #          severity: 'CRITICAL,HIGH'
      - name: Retag dockerimage
        run: docker tag docker.io/my-organization/my-app:${{ github.sha }} 841162677945.dkr.ecr.ap-northeast-1.amazonaws.com/umaxica/jit:latest
      - name: Push to Amazon ECR
        run: docker push 841162677945.dkr.ecr.ap-northeast-1.amazonaws.com/umaxica/jit:latest
  push-to-cloudflare-r2:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    needs: [ setup ]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  push-to-amazon-s3:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    needs: [ setup ]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

name: 'CI'
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
  issues: write
defaults:
  run:
    shell: bash
jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Check Application Boot
        run: bundle exec rails runner "puts ActiveRecord::Base.connection.active?"
  brakeman:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [setup]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - run: bundle exec brakeman -z -q
  rubocop:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [setup]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Rubocop
        run: bin/rubocop --fail-fast
  bundle-audit:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [setup]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: bundle audit
        run: bundle exec bundle audit check --update
  audit:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [setup]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Stats
        run: bin/rails stats
      - name: about
        run: bin/rails about
      - name: notes
        run: bin/rails notes
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [setup]
    defaults:
      run:
        shell: bash
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 6380:6379
      postgres:
        image: postgres
        env:
          POSTGRES_USER: 'default'
          POSTGRES_PASSWORD: 'password'
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5433:5432
    env:
      POSTGRES_USER: 'default'
      POSTGRES_PASSWORD: 'password'
      POSTGRESQL_AUTH_PUB: 'localhost'
      POSTGRESQL_AUTH_SUB: 'localhost'
      POSTGRESQL_DOCS_PUB: 'localhost'
      POSTGRESQL_DOCS_SUB: 'localhost'
      POSTGRESQL_CORE_PUB: 'localhost'
      POSTGRESQL_CORE_SUB: 'localhost'
      REDIS_CACHE_URL: 'redis://localhost:6380/0'
      REDIS_SESSION_URL: 'redis://localhost:6380/1'
      ENV: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Rails db:create
        run: bin/rails db:create
      - name: Rails db:migrate
        run: bin/rails db:migrate
      # - name: Debug
      #   uses: mxschmitt/action-tmate@v3
      #   timeout-minutes: 15
      - name: Do tests without System Test
        run: bin/rails test
  'test-system':
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [setup]
    defaults:
      run:
        shell: bash
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 6380:6379
      postgres:
        image: postgres
        env:
          POSTGRES_USER: 'default'
          POSTGRES_PASSWORD: 'password'
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5433:5432
    env:
      POSTGRES_USER: 'default'
      POSTGRES_PASSWORD: 'password'
      POSTGRESQL_AUTH_PUB: 'localhost'
      POSTGRESQL_AUTH_SUB: 'localhost'
      POSTGRESQL_DOCS_PUB: 'localhost'
      POSTGRESQL_DOCS_SUB: 'localhost'
      POSTGRESQL_CORE_PUB: 'localhost'
      POSTGRESQL_CORE_SUB: 'localhost'
      REDIS_CACHE_URL: 'redis://localhost:6380/0'
      REDIS_SESSION_URL: 'redis://localhost:6380/1'
    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl default-mysql-client libjemalloc2 libvips
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Add hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1   com.api.localdomain net.api.localdomainc org.api.localdomain app.api.localdomain com.www.localdomain net.www.localdomain org.www.localdomain app.www.localdomain localhost" | sudo tee -a /etc/hosts
      - name: Rails db:create
        run: bin/rails db:create
      - name: Rails db:migrate
        run: bin/rails db:migrate
      - name: Do System Test
        run: bin/rails test:system
#  test:channels     -- Run tests in test/channels
#  test:controllers  -- Run tests in test/controllers
#  test:db           -- Reset the database and run 'bin/rails test'
#  test:functionals  -- Run tests in test/controllers, test/mailers, and test/functional
#  test:generators   -- Run tests in test/lib/generators
#  test:helpers      -- Run tests in test/helpers
#  test:integration  -- Run tests in test/integration
#  test:jobs         -- Run tests in test/jobs
#  test:mailboxes    -- Run tests in test/mailboxes
#  test:mailers      -- Run tests in test/mailers
#  test:models       -- Run tests in test/models
#  test:units
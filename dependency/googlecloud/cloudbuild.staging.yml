steps:
  - name: 'ubuntu:24.04'
    args:
      - '-lc'
      - |
        set -euo pipefail
        export DEBIAN_FRONTEND=noninteractive
        # --- Build deps ---
        apt-get update
        apt-get install -y --no-install-recommends \
          build-essential ca-certificates curl git \
          libpq-dev libvips libvips-dev libyaml-dev \
          libffi-dev libreadline-dev zlib1g-dev \
          pkg-config tzdata libssl-dev npm
        rm -rf /var/lib/apt/lists/*
        # --- mise install ---
        curl -fsSL https://mise.run | sh
        export PATH="$$HOME/.local/bin:$$PATH"
        export PATH="$$HOME/.local/share/mise/shims:$$PATH"
        # Install the latest Ruby, Node, and Bun
        mise install ruby@latest node@latest bun@latest
        mise use -g ruby@latest node@latest bun@latest
        # --- Ruby deps ---
        gem install --no-document bundler
        bundle config set path vendor/bundle
        bundle config set without 'development test'
        bundle config set jobs "$$(nproc)"
        bundle config set retry 3
        bundle install
        # --- JS deps ---
        bun install
        # --- Assets build ---
        rm -rf public/assets
        SECRET_KEY_BASE=dummy RAILS_ENV=asset bundle exec rails assets:precompile
    id: Build assets with mise (ruby/node/bun latest)
    entrypoint: bash
  - name: 'public.ecr.aws/aws-cli/aws-cli:latest'
    args:
      - '-lc'
      - |
        set -euo pipefail
        export AWS_REGION=auto
        export AWS_S3_FORCE_PATH_STYLE=true
        aws --version
        aws s3 sync public/ "s3://$_R2_BUCKET/" \
          --endpoint-url "$_R2_ENDPOINT" \
          --delete \
          --no-progress
    id: up files to cloudflare r2
    entrypoint: bash
    secretEnv:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - .
      - '--target'
      - production
      - '-t'
      - asia-northeast1-docker.pkg.dev/umaxica-454904/staging/sample
      - '--file'
      - Dockerfile
    id: Docker build
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - asia-northeast1-docker.pkg.dev/umaxica-454904/staging/sample
    id: Docker push
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - '-lc'
      - |
        set -euxo pipefail
        gcloud run deploy "${_SERVICE}" \
          --image "asia-northeast1-docker.pkg.dev/umaxica-454904/staging/sample:latest" \
          --region "${_REGION}" \
          --project "$PROJECT_ID" \
          --quiet
    entrypoint: bash
timeout: 3600s
substitutions:
  _R2_ENDPOINT: 'https://c90999d8a4039c63d02b7a7b1545d211.r2.cloudflarestorage.com/'
  _IMAGE: '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_IMAGE_NAME}:${SHORT_SHA}'
  _REGION: asia-northeast1
  _REPO: umaxica-app
  _IMAGE_NAME: sample
  _SERVICE: sample
  _R2_BUCKET: umaxica-production-cloudflare-r2-asset-jit-jp
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/AWS_ACCESS_KEY_ID/versions/latest
      env: AWS_ACCESS_KEY_ID
    - versionName: projects/$PROJECT_ID/secrets/AWS_SECRET_ACCESS_KEY/versions/latest
      env: AWS_SECRET_ACCESS_KEY
options:
  logging: CLOUD_LOGGING_ONLY
#  machineType: 'E2-STANDARD-2'

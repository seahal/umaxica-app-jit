# GitHub Actions on main should trigger this build.
# - Compile Rails/Bun assets while keeping public/assets/.manifest.json.
# - Upload the compiled assets to Cloudflare R2 using injected secrets.
# - Build and push the production image to Artifact Registry.
# - Deploy the freshly built image to the specified Cloud Run service.
steps:
  - id: 'Compile assets'
    name: 'ubuntu:24.04'
    entrypoint: 'bash'
    env:
      - 'RAILS_ENV=production'
      - 'BUNDLE_WITHOUT=development:test'
    secretEnv: ['SECRET_KEY_BASE']
    args:
      - '-lc'
      - |
        set -euo pipefail

        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get install -y --no-install-recommends \
          build-essential \
          ca-certificates \
          curl \
          git \
          libpq-dev \
          libvips \
          libvips-dev \
          libyaml-dev \
          pkg-config \
          ruby-full \
          ruby-dev \
          tzdata \
          unzip
        rm -rf /var/lib/apt/lists/*

        curl -fsSL https://bun.sh/install | bash
        export BUN_INSTALL="$HOME/.bun"
        export PATH="$BUN_INSTALL/bin:$PATH"

        gem install --no-document bundler
        bundle config set path vendor/bundle
        bundle config set jobs "$(nproc)"
        bundle config set retry 3

        bundle install
        bun install
        bun run build

        rm -rf public/assets
        RAILS_ENV=production SECRET_KEY_BASE="$SECRET_KEY_BASE" bundle exec rails assets:precompile

  - id: 'Upload assets to R2'
    name: 'amazon/aws-cli:2.17.74'
    entrypoint: 'bash'
    env:
      - 'AWS_DEFAULT_REGION=auto'
      - 'R2_BUCKET=${_CB_R2_BUCKET}'
      - 'R2_ACCOUNT_ID=${_CB_R2_ACCOUNT_ID}'
    secretEnv: ['AWS_ACCESS_KEY_ID', 'AWS_SECRET_ACCESS_KEY']
    args:
      - '-lc'
      - |
        set -euo pipefail
        aws s3 sync public/assets "s3://$R2_BUCKET/" \
          --endpoint-url "https://$R2_ACCOUNT_ID.r2.cloudflarestorage.com" \
          --delete

  - id: 'Build image'
    name: 'gcr.io/cloud-builders/docker'
    env:
      - 'DOCKER_BUILDKIT=1'
    args:
      - 'build'
      - '--target'
      - 'production'
      - '-t'
      - '${_CB_SERVICE_IMAGE}:${SHORT_SHA}'
      - '-t'
      - '${_CB_SERVICE_IMAGE}:latest'
      - '.'

  - id: 'Push image (sha)'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_CB_SERVICE_IMAGE}:${SHORT_SHA}'

  - id: 'Push image (latest)'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_CB_SERVICE_IMAGE}:latest'

  - id: 'Deploy to Cloud Run'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_CB_CLOUD_RUN_SERVICE}'
      - '--image'
      - '${_CB_SERVICE_IMAGE}:${SHORT_SHA}'
      - '--region'
      - '${_CB_CLOUD_RUN_REGION}'
      - '--platform'
      - 'managed'
substitutions:
  _CB_R2_BUCKET: 'replace-with-r2-bucket'
  _CB_R2_ACCOUNT_ID: 'replace-with-account-id'
  _CB_SERVICE_IMAGE: 'us-central1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/myimage'
  _CB_CLOUD_RUN_SERVICE: 'replace-with-cloud-run-service'
  _CB_CLOUD_RUN_REGION: 'us-central1'
availableSecrets:
  secretManager:
    - versionName: 'projects/${PROJECT_ID}/secrets/rails-secret-key-base/versions/latest'
      env: 'SECRET_KEY_BASE'
    - versionName: 'projects/${PROJECT_ID}/secrets/cloudflare-r2-access-key-id/versions/latest'
      env: 'AWS_ACCESS_KEY_ID'
    - versionName: 'projects/${PROJECT_ID}/secrets/cloudflare-r2-secret-access-key/versions/latest'
      env: 'AWS_SECRET_ACCESS_KEY'
